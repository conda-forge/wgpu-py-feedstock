{% set version = "0.21.0" %}

package:
  name: wgpu-py
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/w/wgpu/wgpu-{{ version }}.tar.gz
  sha256: eaa6ea6d887e92d5e19e28e26797053d8c0762f038d9042114ac4f15659689e4

build:
  noarch: python
  script_env:
    # Avoid pulling in any binary files during the hatchling building process
    # https://github.com/pygfx/wgpu-py/pull/669
    - WGPU_PY_BUILD_NOARCH=1
  script:
    # Don't vendor the headers, let them get pulled in by webgpu-headers at runtime
    - rm wgpu/resources/webgpu.h   # [unix]
    - rm wgpu/resources/wgpu.h     # [unix]
    - del wgpu\resources\webgpu.h  # [win]
    - del wgpu\resources\wgpu.h    # [win]
    - {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - python {{ python_min }}
    - pip
    - hatchling
  run:
    - python >={{ python_min }}
    - cffi >=1.15.0
    - rubicon-objc >=0.4.1  # [osx]
    - sniffio
    # https://github.com/pygfx/wgpu-py/blob/main/wgpu/backends/wgpu_native/__init__.py
    - wgpu-native 24.0.0.2
    # For newer versions (after 22.1.0.5) we have a run_constraint on webgpu-headers
    - webgpu-headers 0.0.0.2024.11.12
    - __linux  # [linux]
    - __win    # [win]
    - __osx    # [osx]
  run_constrained:   # [osx]
    # seems like rubicon-objc doesn't support pypy...
    - python *=*_cpython    # [osx]

test:
  imports:
    - wgpu
    - wgpu.backends.wgpu_native
  requires:
    - pip
    - python {{ python_min }}
  commands:
    - pip check

about:
  home: https://github.com/pygfx/wgpu-py
  summary: next generation GPU API for Python
  license: BSD-2-Clause
  license_file: LICENSE

extra:
  recipe-maintainers:
    - hmaarrfk
